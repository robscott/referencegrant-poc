---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: unapproved
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusterreferenceconsumers.reference.authorization.k8s.io
spec:
  group: reference.authorization.k8s.io
  names:
    kind: ClusterReferenceConsumer
    listKind: ClusterReferenceConsumerList
    plural: clusterreferenceconsumers
    shortNames:
    - crc
    singular: clusterreferenceconsumer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterReferenceConsumer identifies a consumer of a type of reference.
          For example, a consumer may support references from Gateways to Secrets
          for tls.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          classNames:
            description: ClassNames is an optional list of applicable classes for
              this Consumer if the "From" API is partitioned by class
            items:
              type: string
            type: array
          for:
            description: "For refers to the purpose of this reference. (Cluster)ReferenceGrants
              matching the From, To, and For of this resource will be authorized for
              the Subject of this resource. \n This value must be a valid DNS label
              as defined per RFC-1035."
            type: string
          from:
            description: From refers to the group and resource that these references
              originate from.
            properties:
              group:
                type: string
              resource:
                type: string
            required:
            - group
            - resource
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          subject:
            description: Subject refers to the subject that is a consumer of the referenced
              pattern(s).
            properties:
              kind:
                description: Kind of object being referenced. Values defined by this
                  API group are "User", "Group", and "ServiceAccount". If the Authorizer
                  does not recognized the kind value, the Authorizer should report
                  an error.
                type: string
              name:
                description: Name of the object being referenced.
                type: string
              namespace:
                description: Namespace of the referenced object.  If the object kind
                  is non-namespace, such as "User" or "Group", and this value is not
                  empty the Authorizer should report an error. +optional
                type: string
            required:
            - kind
            - name
            type: object
          to:
            description: To refers to the group and resource that these references
              target.
            properties:
              group:
                type: string
              resource:
                type: string
            required:
            - group
            - resource
            type: object
        required:
        - for
        - from
        - subject
        - to
        type: object
    served: true
    storage: true
    subresources: {}
